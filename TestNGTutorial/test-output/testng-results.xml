<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="12" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-06T00:00:51 IST" name="Loan Department" finished-at="2023-02-06T00:00:51 IST" duration-ms="173">
    <groups>
      <group name="Smoke">
        <method signature="day1.Demo()[pri:0, instance:Tests.day1@482bce4f]" name="Demo" class="Tests.day1"/>
        <method signature="day2.pLoan()[pri:0, instance:Tests.day2@2dde1bff]" name="pLoan" class="Tests.day2"/>
        <method signature="day3.WebLoginCarLoan()[pri:0, instance:Tests.day3@48f278eb]" name="WebLoginCarLoan" class="Tests.day3"/>
        <method signature="day4.WebLoginHomeLoan()[pri:0, instance:Tests.day4@543588e6]" name="WebLoginHomeLoan" class="Tests.day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-02-06T00:00:51 IST" name="Car Loan" finished-at="2023-02-06T00:00:51 IST" duration-ms="87">
      <class name="Tests.day3">
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String)[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeClass" finished-at="2023-02-06T00:00:51 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://rahulshettyacademy.com/AutomationPractice/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="ApiLoginCarLoan()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="ApiLoginCarLoan" finished-at="2023-02-06T00:00:51 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLoginCarLoan -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="afterEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method signature="WebLoginCarLoan()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="WebLoginCarLoan" finished-at="2023-02-06T00:00:51 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="afterEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="usingDataProvider(java.lang.String,java.lang.String)[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="usingDataProvider" data-provider="getData" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDataProvider -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="afterEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="usingDataProvider(java.lang.String,java.lang.String)[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="usingDataProvider" data-provider="getData" finished-at="2023-02-06T00:00:51 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDataProvider -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="afterEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="beforeEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="usingDataProvider(java.lang.String,java.lang.String)[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="usingDataProvider" data-provider="getData" finished-at="2023-02-06T00:00:51 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDataProvider -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:Tests.day3@48f278eb]" started-at="2023-02-06T00:00:51 IST" name="afterEveryMethod" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
      </class> <!-- Tests.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2023-02-06T00:00:51 IST" name="Personal Loan" finished-at="2023-02-06T00:00:51 IST" duration-ms="68">
      <class name="Tests.day2">
        <test-method is-config="true" signature="preRequisite()[pri:0, instance:Tests.day2@2dde1bff]" started-at="2023-02-06T00:00:51 IST" name="preRequisite" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequisite -->
        <test-method signature="pLoan()[pri:0, instance:Tests.day2@2dde1bff]" started-at="2023-02-06T00:00:51 IST" name="pLoan" finished-at="2023-02-06T00:00:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:Tests.day2@2dde1bff]" started-at="2023-02-06T00:00:51 IST" name="lastExecution" finished-at="2023-02-06T00:00:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- Tests.day2 -->
      <class name="Tests.day1">
        <test-method signature="Demo()[pri:0, instance:Tests.day1@482bce4f]" started-at="2023-02-06T00:00:51 IST" name="Demo" finished-at="2023-02-06T00:00:51 IST" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Tests.day1.Demo(day1.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- Tests.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2023-02-06T00:00:51 IST" name="Home Loan" finished-at="2023-02-06T00:00:51 IST" duration-ms="6">
      <class name="Tests.day4">
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:Tests.day4@543588e6]" started-at="2023-02-06T00:00:51 IST" name="MobileLoginHomeLoan" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:Tests.day4@543588e6]" started-at="2023-02-06T00:00:51 IST" name="WebLoginHomeLoan" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
      </class> <!-- Tests.day4 -->
      <class name="Tests.day2">
        <test-method is-config="true" signature="LastSuite()[pri:0, instance:Tests.day2@2dde1bff]" started-at="2023-02-06T00:00:51 IST" name="LastSuite" finished-at="2023-02-06T00:00:51 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LastSuite -->
        <test-method is-config="true" signature="FirstSuite()[pri:0, instance:Tests.day2@2dde1bff]" started-at="2023-02-06T00:00:51 IST" name="FirstSuite" finished-at="2023-02-06T00:00:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstSuite -->
      </class> <!-- Tests.day2 -->
    </test> <!-- Home Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
